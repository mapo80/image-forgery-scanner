@page
@model ImageForensic.Api.Pages.IndexModel
@using ImageForensics.Core.Models
@using System.Collections.Generic
@using System.Linq
<!DOCTYPE html>
<html lang="it">
<head>
    <meta charset="utf-8" />
    <title>Analisi immagine</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.css" />
    <link rel="stylesheet" href="/css/site.css" />
</head>
<body class="bg-light">
<div class="container py-5">
    <h1 class="mb-4 text-center">Analisi immagine</h1>
    <div class="mb-4">
        <button class="btn btn-secondary" type="button" data-bs-toggle="collapse" data-bs-target="#defaultValues" aria-expanded="false" aria-controls="defaultValues">
            Mostra valori di default
        </button>
        <div class="collapse mt-2" id="defaultValues">
            <div class="card card-body">
                <table class="table table-sm mb-0">
                    <thead>
                        <tr><th>Opzione</th><th>Valore</th></tr>
                    </thead>
                    <tbody>
                        <tr><td>ELA quality</td><td>@Model.DefaultOptions.ElaQuality</td></tr>
                        <tr><td>ELA window size</td><td>@Model.DefaultOptions.ElaWindowSize</td></tr>
                        <tr><td>ELA k</td><td>@Model.DefaultOptions.ElaK</td></tr>
                        <tr><td>ELA min area</td><td>@Model.DefaultOptions.ElaMinArea</td></tr>
                        <tr><td>ELA kernel size</td><td>@Model.DefaultOptions.ElaKernelSize</td></tr>
                        <tr><td>Copy-Move feature count</td><td>@Model.DefaultOptions.CopyMoveFeatureCount</td></tr>
                        <tr><td>Copy-Move match distance</td><td>@Model.DefaultOptions.CopyMoveMatchDistance</td></tr>
                        <tr><td>Copy-Move RANSAC reprojection</td><td>@Model.DefaultOptions.CopyMoveRansacReproj</td></tr>
                        <tr><td>Copy-Move RANSAC probability</td><td>@Model.DefaultOptions.CopyMoveRansacProb</td></tr>
                        <tr><td>Expected camera models</td><td>@string.Join(", ", Model.DefaultOptions.ExpectedCameraModels)</td></tr>
                        <tr><td>ELA weight</td><td>@Model.DefaultOptions.ElaWeight</td></tr>
                        <tr><td>Copy-Move weight</td><td>@Model.DefaultOptions.CopyMoveWeight</td></tr>
                        <tr><td>Inpainting weight</td><td>@Model.DefaultOptions.InpaintingWeight</td></tr>
                        <tr><td>Metadata weight</td><td>@Model.DefaultOptions.ExifWeight</td></tr>
                        <tr><td>Clean threshold</td><td>@Model.DefaultOptions.CleanThreshold</td></tr>
                        <tr><td>Tampered threshold</td><td>@Model.DefaultOptions.TamperedThreshold</td></tr>
                        <tr><td>Enabled checks</td><td>@string.Join(", ", Model.DefaultOptions.EnabledChecks.Select(c => c == "Exif" ? "Metadata" : c))</td></tr>
                        <tr><td>Max parallel checks</td><td>@Model.DefaultOptions.MaxParallelChecks</td></tr>
                    </tbody>
                </table>
            </div>
        </div>
    </div>
    <form method="post" enctype="multipart/form-data" class="mb-5">
        <div class="mb-3">
            <label class="form-label" asp-for="Image">Immagine <i class="bi bi-info-circle ms-1" data-bs-toggle="tooltip" title="Upload the image to analyze."></i></label>
            <input class="form-control" asp-for="Image" type="file" />
        </div>

        <div class="card mb-3">
            <div class="card-header">ELA <i class="bi bi-info-circle ms-1" data-bs-toggle="tooltip" title="Error Level Analysis highlights areas with inconsistent compression levels."></i></div>
            <div class="card-body">
                <div class="mb-3">
                    <label class="form-label" asp-for="Options.ElaQuality">
                        @Html.DisplayNameFor(m => m.Options.ElaQuality) <i class="bi bi-info-circle ms-1" data-bs-toggle="tooltip" title="JPEG re-save quality used for the analysis."></i>
                    </label>
                    <input class="form-control" asp-for="Options.ElaQuality" type="number" />
                </div>
                <div>
                    <button class="btn btn-link p-0" type="button" data-bs-toggle="collapse" data-bs-target="#elaAdvanced" aria-expanded="false" aria-controls="elaAdvanced">
                        Opzioni avanzate
                    </button>
                    <div class="collapse mt-3" id="elaAdvanced">
                        <div class="mb-3">
                            <label class="form-label" asp-for="Options.ElaWindowSize">
                                @Html.DisplayNameFor(m => m.Options.ElaWindowSize)
                            </label>
                            <input class="form-control" asp-for="Options.ElaWindowSize" type="number" />
                        </div>
                        <div class="mb-3">
                            <label class="form-label" asp-for="Options.ElaK">
                                @Html.DisplayNameFor(m => m.Options.ElaK)
                            </label>
                            <input class="form-control" asp-for="Options.ElaK" type="number" step="0.01" />
                        </div>
                        <div class="mb-3">
                            <label class="form-label" asp-for="Options.ElaMinArea">
                                @Html.DisplayNameFor(m => m.Options.ElaMinArea)
                            </label>
                            <input class="form-control" asp-for="Options.ElaMinArea" type="number" />
                        </div>
                        <div class="mb-3">
                            <label class="form-label" asp-for="Options.ElaKernelSize">
                                @Html.DisplayNameFor(m => m.Options.ElaKernelSize)
                            </label>
                            <input class="form-control" asp-for="Options.ElaKernelSize" type="number" />
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="card mb-3">
            <div class="card-header">Copy-Move <i class="bi bi-info-circle ms-1" data-bs-toggle="tooltip" title="Detects duplicated regions that may indicate copy-move tampering."></i></div>
            <div class="card-body">
                <div class="mb-3">
                    <label class="form-label" asp-for="Options.CopyMoveFeatureCount">
                        @Html.DisplayNameFor(m => m.Options.CopyMoveFeatureCount) <i class="bi bi-info-circle ms-1" data-bs-toggle="tooltip" title="Number of keypoints used for matching."></i>
                    </label>
                    <input class="form-control" asp-for="Options.CopyMoveFeatureCount" type="number" />
                </div>
                <div class="mb-3">
                    <label class="form-label" asp-for="Options.CopyMoveMatchDistance">
                        @Html.DisplayNameFor(m => m.Options.CopyMoveMatchDistance) <i class="bi bi-info-circle ms-1" data-bs-toggle="tooltip" title="Maximum distance between matched keypoints."></i>
                    </label>
                    <input class="form-control" asp-for="Options.CopyMoveMatchDistance" type="number" step="0.1" />
                </div>
                <div class="mb-3">
                    <label class="form-label" asp-for="Options.CopyMoveRansacReproj">
                        @Html.DisplayNameFor(m => m.Options.CopyMoveRansacReproj) <i class="bi bi-info-circle ms-1" data-bs-toggle="tooltip" title="RANSAC reprojection threshold."></i>
                    </label>
                    <input class="form-control" asp-for="Options.CopyMoveRansacReproj" type="number" step="0.1" />
                </div>
                <div class="mb-3">
                    <label class="form-label" asp-for="Options.CopyMoveRansacProb">
                        @Html.DisplayNameFor(m => m.Options.CopyMoveRansacProb) <i class="bi bi-info-circle ms-1" data-bs-toggle="tooltip" title="RANSAC success probability."></i>
                    </label>
                    <input class="form-control" asp-for="Options.CopyMoveRansacProb" type="number" step="0.01" />
                </div>
            </div>
        </div>


        <div class="card mb-3">
            <div class="card-header">Metadata <i class="bi bi-info-circle ms-1" data-bs-toggle="tooltip" title="Checks for camera model anomalies in EXIF metadata."></i></div>
            <div class="card-body">
                <label class="form-label" asp-for="Options.ExpectedCameraModels">
                    @Html.DisplayNameFor(m => m.Options.ExpectedCameraModels) <i class="bi bi-info-circle ms-1" data-bs-toggle="tooltip" title="Select the expected camera models."></i>
                </label>
                @foreach (var cam in Model.AvailableCameraModels)
                {
                    <div class="form-check">
                        <input class="form-check-input" type="checkbox" id="cam-@cam" name="Options.ExpectedCameraModels" value="@cam" @(Model.Options.ExpectedCameraModels?.Contains(cam) == true ? "checked" : "") />
                        <label class="form-check-label" for="cam-@cam">@cam</label>
                    </div>
                }
            </div>
        </div>

        <div class="card mb-3">
            <div class="card-header">Pesi <i class="bi bi-info-circle ms-1" data-bs-toggle="tooltip" title="Weights used when combining individual scores."></i></div>
            <div class="card-body">
                <div class="row g-3">
                    <div class="col-md-6">
                        <label class="form-label" asp-for="Options.ElaWeight">
                            @Html.DisplayNameFor(m => m.Options.ElaWeight) <i class="bi bi-info-circle ms-1" data-bs-toggle="tooltip" title="Weight of the ELA check."></i>
                        </label>
                        <input class="form-range" asp-for="Options.ElaWeight" type="range" min="0" max="1" step="0.01" oninput="document.getElementById('ElaWeightValue').textContent = this.value" />
                        <div><span id="ElaWeightValue">@Model.Options.ElaWeight</span></div>
                    </div>
                    <div class="col-md-6">
                        <label class="form-label" asp-for="Options.CopyMoveWeight">
                            @Html.DisplayNameFor(m => m.Options.CopyMoveWeight) <i class="bi bi-info-circle ms-1" data-bs-toggle="tooltip" title="Weight of the Copy-Move check."></i>
                        </label>
                        <input class="form-range" asp-for="Options.CopyMoveWeight" type="range" min="0" max="1" step="0.01" oninput="document.getElementById('CopyMoveWeightValue').textContent = this.value" />
                        <div><span id="CopyMoveWeightValue">@Model.Options.CopyMoveWeight</span></div>
                    </div>
                    <div class="col-md-6">
                        <label class="form-label" asp-for="Options.InpaintingWeight">
                            @Html.DisplayNameFor(m => m.Options.InpaintingWeight) <i class="bi bi-info-circle ms-1" data-bs-toggle="tooltip" title="Weight of the Inpainting check."></i>
                        </label>
                        <input class="form-range" asp-for="Options.InpaintingWeight" type="range" min="0" max="1" step="0.01" oninput="document.getElementById('InpaintingWeightValue').textContent = this.value" />
                        <div><span id="InpaintingWeightValue">@Model.Options.InpaintingWeight</span></div>
                    </div>
                    <div class="col-md-6">
                        <label class="form-label" asp-for="Options.ExifWeight">
                            @Html.DisplayNameFor(m => m.Options.ExifWeight) <i class="bi bi-info-circle ms-1" data-bs-toggle="tooltip" title="Weight of the EXIF check."></i>
                        </label>
                        <input class="form-range" asp-for="Options.ExifWeight" type="range" min="0" max="1" step="0.01" oninput="document.getElementById('ExifWeightValue').textContent = this.value" />
                        <div><span id="ExifWeightValue">@Model.Options.ExifWeight</span></div>
                    </div>
                </div>
            </div>
        </div>

        <div class="card mb-3">
            <div class="card-header">Soglie <i class="bi bi-info-circle ms-1" data-bs-toggle="tooltip" title="Thresholds separating clean and tampered scores."></i></div>
            <div class="card-body row g-3">
                <div class="col-md-6">
                    <label class="form-label" asp-for="Options.CleanThreshold">
                        @Html.DisplayNameFor(m => m.Options.CleanThreshold) <i class="bi bi-info-circle ms-1" data-bs-toggle="tooltip" title="Scores below this value are considered clean."></i>
                    </label>
                    <input class="form-range" asp-for="Options.CleanThreshold" type="range" min="0" max="1" step="0.01" oninput="document.getElementById('CleanThresholdValue').textContent = this.value" />
                    <div><span id="CleanThresholdValue">@Model.Options.CleanThreshold</span></div>
                </div>
                <div class="col-md-6">
                    <label class="form-label" asp-for="Options.TamperedThreshold">
                        @Html.DisplayNameFor(m => m.Options.TamperedThreshold) <i class="bi bi-info-circle ms-1" data-bs-toggle="tooltip" title="Scores above this value indicate tampering."></i>
                    </label>
                    <input class="form-range" asp-for="Options.TamperedThreshold" type="range" min="0" max="1" step="0.01" oninput="document.getElementById('TamperedThresholdValue').textContent = this.value" />
                    <div><span id="TamperedThresholdValue">@Model.Options.TamperedThreshold</span></div>
                </div>
            </div>
        </div>

        <div class="card mb-3">
            <div class="card-header">Altre opzioni</div>
            <div class="card-body row g-3">
                <div class="col-md-6">
                    <label class="form-label">Enabled checks <i class="bi bi-info-circle ms-1" data-bs-toggle="tooltip" title="Select which analyses to run."></i></label>
                    @foreach (var check in Enum.GetValues(typeof(ForensicsCheck)).Cast<ForensicsCheck>())
                    {
                        if (check == ForensicsCheck.None || check == ForensicsCheck.All || check == ForensicsCheck.Splicing)
                        {
                            continue;
                        }
                        var label = check == ForensicsCheck.Exif ? "Metadata" : check.ToString();
                        <div class="form-check">
                            <input class="form-check-input" type="checkbox" id="check-@check" name="Options.EnabledChecks" value="@check" @(Model.Options.EnabledChecks?.Contains(check.ToString()) == true ? "checked" : "") />
                            <label class="form-check-label" for="check-@check">@label</label>
                            <i class="bi bi-info-circle ms-1" data-bs-toggle="tooltip" title="@Model.CheckDescriptions[check]"></i>
                        </div>
                    }
                </div>
                <div class="col-md-6">
                    <label class="form-label" asp-for="Options.MaxParallelChecks">
                        @Html.DisplayNameFor(m => m.Options.MaxParallelChecks) <i class="bi bi-info-circle ms-1" data-bs-toggle="tooltip" title="Maximum number of checks to run in parallel."></i>
                    </label>
                    <input class="form-control" asp-for="Options.MaxParallelChecks" type="number" />
                </div>
            </div>
        </div>

        <div class="position-relative">
            <button type="submit" class="btn btn-primary">Analizza</button>
            <div id="loading-overlay" class="d-none position-absolute top-50 start-50 translate-middle">
                <div class="spinner-border" role="status">
                    <span class="visually-hidden">Caricamento...</span>
                </div>
            </div>
        </div>
    </form>

    @if (Model.Result != null)
    {
        @await Html.PartialAsync("_Result", Model)
    }
</div>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>
<script>
    document.addEventListener('DOMContentLoaded', function () {
        const form = document.querySelector('form');
        form.addEventListener('submit', function () {
            document.getElementById('loading-overlay').classList.remove('d-none');
            form.querySelector('button[type="submit"]').disabled = true;
        });
        const result = document.getElementById('result');
        if (result) {
            result.scrollIntoView({ behavior: 'smooth' });
        }
        const tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'));
        tooltipTriggerList.forEach(t => new bootstrap.Tooltip(t));
    });
</script>
</body>
</html>
